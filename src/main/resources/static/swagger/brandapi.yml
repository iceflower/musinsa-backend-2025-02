openapi: 3.0.3
info:
  title: 브랜드 API 명세서
  description: |-
    - 무신사 과제전형 제출용 백엔드 서버의 브랜드 정보 관련 API 명세서입니다.
  contact:
    email: iceflower01@gmail.com
  version: 0.0.1 SNAPSHOT

servers:
  - url: https://localhost:8080
tags:
  - name: 브랜드 정보 API
    description: 브랜드 정보 조회/등록/수정/삭제 기능을 담당하는 API입니다.

paths:
  "/v1/api/brand/":
    post:
      tags:
        - 브랜드 정보 API
      summary: 브랜드 정보 신규등록
      description: 새로운 브랜드 정보를 DB에 적재한 후, 그 결과를 돌려줍니다.
      operationId: registerBrandInfo
      requestBody:
        description: 신규등록할 브랜드 데이터
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandInfoCorrectRequest'

      responses:
        '200':
          description: 작업 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandInfo'
        '400':
          description: 수정 요청 데이터 포맷이 유효하지 않을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDataValidationErrorResponse'
        '422':
          description: 브랜드 이름을 이미 사용중일 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  "/v1/api/brand/list":
    get:
      tags:
        - 브랜드 정보 API
      summary: 브랜드 정보 리스트 조회
      description: DB에 저장된 브랜드 리스트를 조회하여 돌려줍니다.
      operationId: getBrandList
      parameters:
        - name: pageNumber
          description: 0번부터 시작하는 페이지 번호
          in: query
          required: false
          schema:
            type: integer
            format: int32
            example: 0
        - name: pageSize
          in: query
          description: 페이지 사이즈
          required: false
          schema:
            type: integer
            format: int32
            example: 10
      responses:
        '200':
          description: 작업 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedBrandInfo'

  "/v1/api/brand/{brandId}":
    get:
      tags:
        - 브랜드 정보 API
      summary: 개별 브랜드 정보 조회
      description: DB에 저장된 개별 브랜드 정보를 조회하여 돌려줍니다.
      operationId: getBrandInfo
      parameters:
        - name: brandId
          in: path
          description: 브랜드 정보 ID
          required: true
          schema:
            type: string
            example: 0JS975W4891XQ
      responses:
        '200':
          description: 작업 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandInfo'
        '422':
          description: 삭제 대상 브랜드 정보를 찾지 못했을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - 브랜드 정보 API
      summary: 개별 브랜드 정보 수정
      description: DB에 저장된 개별 브랜드 정보를 수정한 후 그 결과를 돌려줍니다.
      operationId: correctBrandInfo
      parameters:
        - name: brandId
          in: path
          description: 브랜드 정보 ID
          required: true
          schema:
            type: string
            example: 0JS975W4891XQ
      requestBody:
        description: 수정할 브랜드 데이터
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandInfoCorrectRequest'
        required: true
      responses:
        '200':
          description: 작업 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandInfo'
        '400':
          description: 수정 요청 데이터 포맷이 유효하지 않을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDataValidationErrorResponse'
        '422':
          description: 수정 대상 브랜드 정보를 찾지 못했을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - 브랜드 정보 API
      summary: 개별 브랜드 정보 삭제
      description: DB에 저장된 개별 브랜드 정보를 삭제한 후 그 결과를 돌려줍니다.
      operationId: correctBrandInfo
      parameters:
        - name: brandId
          in: path
          description: 브랜드 정보 ID
          required: true
          schema:
            type: string
            example: 0JS975W4891XQ
      requestBody:
        description: 삭제 요청 데이터
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandInfoDeleteRequest'
        required: true
      responses:
        '200':
          description: 작업 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandInfo'
        '422':
          description: 삭제 대상 브랜드 정보를 찾지 못했거나, 삭제 대상 브랜드의 제품정보가 존재할 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



components:
  schemas:
    BrandInfo:
      type: object
      description: 브랜드 정보
      properties:
        id:
          type: string
          description: 브랜드ID
          example: 0JS975W4891XQ
        name:
          type: string
          description: 브랜드이름
          example: A
    PagedBrandInfo:
      type: object
      description: 페이징 처리된 브랜드 정보 리스트
      properties:
        totalPages:
          type: integer
          format: int64
          description: 전체 페이지 갯수
          example: 1
        totalElements:
          type: integer
          format: int64
          description: 전체 엘리먼트 갯수
          example: 9
        size:
          type: integer
          format: int64
          example: 9
        content:
          type: array
          items:
            $ref: '#/components/schemas/BrandInfo'
        number:
          type: integer
          format: int32
          description: 현재 페이지 번호
        sort:
          type: object
          description: 정렬 상세
          properties:
            empty:
              type: boolean
              description: 빈 값 여부
              example: false
            sorted:
              type: boolean
              description: 정렬됨 여부
              example: false
            unsorted:
              type: boolean
              description: 정렬안됨 여부
              example: true
        first:
          type: boolean
          description: 첫 페이지 여부
          example: true
        last:
          type: boolean
          description: 마지막 페이지 여부
          example: false
        numberOfElements:
          type: integer
          format: int64
          description: 전체 엘리먼트 갯수
          example: 999919231
        pageable:
          type: object
          description: 페이징 상세
          properties:
            offset:
              type: integer
              format: int64
              description: 오프셋
              example: 9007199254740991
            sort:
              type: object
              description: 정렬 상세
              properties:
                empty:
                  type: boolean
                  description: 빈 값 여부
                  example: false
                sorted:
                  type: boolean
                  description: 정렬됨 여부
                  example: false
                unsorted:
                  type: boolean
                  description: 정렬안됨 여부
                  example: true
            paged:
              type: boolean
              description: 페이지 처리됨 여부
              example: true
            pageSize:
              type: integer
              format: int32
              description: 페이지 사이즈
              example: 10
            pageNumber:
              type: integer
              format: int32
              description: 현재 페이지 번호
              example: 0
            unpaged:
              type: boolean
              description: 페이지 처리 안됨 여부
              example: false
        empty:
          type: boolean
          description: 빈 값 여부
          example: false
    BrandInfoRegisterRequest:
      type: object
      description: 브랜드 신규등록 요청 객체
      properties:
        brandName:
          type: string
          description: 브랜드 이름
          example: 브랜드명
        requester:
          type: string
          description: 수정 요청자
          example: test@test.com
    BrandInfoCorrectRequest:
      type: object
      description: 브랜드 수정 요청 객체
      properties:
        brandName:
          type: string
          description: 변경할 브랜드 이름
          example: 변경할브랜드명
        requester:
          type: string
          description: 수정 요청자
          example: test@test.com
    BrandInfoDeleteRequest:
      type: object
      description: 브랜드 삭제 요청 객체
      properties:
        requester:
          type: string
          description: 수정 요청자
          example: test@test.com
    ErrorResponse:
      type: object
      description: 오류 응답용 객체
      properties:
        code:
          type: string
          description: 오류코드 (영문 대문자와 언더바로 이루어진 문자열)
          example: ERROR_CODE
        message:
          type: string
          description: 오류 메시지 (한국어 문자열)
          example: 이러저러한 오류가 발생하였습니다.
    RequestDataValidationErrorResponse:
      type: object
      description: 요청 데이터 유효성 검사 오류 응답용 객체
      properties:
        code:
          type: string
          description: 오류코드 (영문 대문자와 언더바로 이루어진 문자열)
          example: INVALID_REQUEST_DATA_FORMAT
        message:
          type: string
          description: 오류 메시지 (한국어 문자열)
          example: 요청 데이터 포맷이 유효하지 않습니다.
        detailed:
          type: array
          description: 오류 상세 리스트 (유효하지 않은 필드 및 오류메시지)
          items:
            type: object
            properties:
              value:
                description: 오류가 발생한 필드값
                anyOf:
                  - type: string
                  - type: number
                  - type: integer
                  - type: boolean
                  - type: array
                    items: { }
                  - type: object
              message:
                type: string
                description: 오류 메시지
